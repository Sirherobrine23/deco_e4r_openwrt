#!/bin/sh /etc/rc.common
#
# Copyright (C) 2017 Tp-link.com
# Author: Weng Kaiping <wengkaiping@tp-link.net>
# Date: 30Mar17
#

START=99
USE_PROCD=1

DEBUG_OUTOUT=0

RESPAWN_THRESHOLD=600
RESPAWN_TIMEOUT=5
RESPAWN_RETRIES=50
SERVICE_PATH="/usr/sbin/nrd"
NRD_CONFIG_FILE="/tmp/nrd.conf"
NRD_CONFIG_TMP_FILE="/tmp/nrd_tmp.conf"

. /lib/functions/nrd-config.sh

nrd_echo() {   
    if [ "$DEBUG_OUTOUT" -gt 0 ]; then
            echo "${1}: ""$2"> /dev/console
	fi
}

generate_config() {
    local conf=$1

    config_load 'repacd'
    config_get device_type repacd DeviceType 'RE'
	
	# Create configuration file and start nrd
    nrd_create_config ${conf} "$device_type" 

}


start_service(){

    config_load 'nrd'
    config_get_bool enabled config 'Enable' '0'

    [ "$enabled" -gt 0  ] || return 1
    if [[ "$(ps | grep "/usr/sbin/radar" | grep -v grep)" != "" \
        || "$(cat /tmp/is_binded)" != "1" ]]; then
        [ "$(ps | grep "/usr/sbin/start_nrd" | grep -v grep)" == "" ] && {
            /usr/sbin/start_nrd &
        }
        return 1
    fi

    generate_config ${NRD_CONFIG_FILE}

    nrd_echo nrd "starting daemon"	

	
    procd_open_instance
    procd_set_param command ${SERVICE_PATH} -d -C "$NRD_CONFIG_FILE"

    # Uncomment this line to send the logs to a file
    #procd_set_param env DBG_APPEND_FILE_PATH=/tmp/nrd.log
    #procd_set_param env DBG_LEVELS=all=DEBUG

    procd_set_param respawn ${RESPAWN_THRESHOLD} ${RESPAWN_TIMEOUT} ${RESPAWN_RETRIES}
    procd_close_instance	
}



stop_service() {
    nrd_echo nrd "stopping"
    service_stop ${SERVICE_PATH}
}


reload_service()
{
    nrd_echo nrd "reload"
    local old_md5_sum="0"
    local new_md5_sum="1"

    [ -f "$NRD_CONFIG_FILE" ] && {
        old_md5_sum=$(md5sum $NRD_CONFIG_FILE| cut -d ' ' -f1)
    }

    > ${NRD_CONFIG_TMP_FILE}
    generate_config ${NRD_CONFIG_TMP_FILE}

    new_md5_sum=$(md5sum $NRD_CONFIG_TMP_FILE| cut -d ' ' -f1)

    [ "${new_md5_sum}" = "${old_md5_sum}" ] &&  return 0 

    /etc/init.d/nrd restart &
    #generate_config
    #send message to nrd to update blacklist can be replace by restart
    #local nrd_pid=`ps|grep ${SERVICE_PATH}|grep -v 'grep'|awk '{print $1}'`
    #nrd_echo nrd "$nrd_pid"
    #if [ -n "$nrd_pid" ];then
    #    kill -SIGUSR1 "$nrd_pid"
    #fi
}

service_triggers()
{
    procd_add_reload_trigger "nrd_blacklist" "nrd" "wifi" 
}

